#include "CSceneGame2.h"
#include "CTexture.h"
#include "CMap.h"
#include "CKey.h"
#include "CRectangle.h"
#include "CBullet.h"
#include "CPlayer.h"
#include "CEnemy.h"
#include "CText.h"
#include"CTreasure.h"
#include"CBoss.h"
#include"CDoor.h"
#include"CDoor2.h"
#include "CEnemy2.h"
#include"CItem.h"
#include"CEnemy3.h"
#include"CDeathBlock.h"
#include"CDisappear.h"
#include"CDisappear2.h"
#include"CCoin.h"
#include"CSound.h"
#include"CBackGround3.h"


extern CTexture Texture5;
void CSceneGame2::Init() {
	//staticïœêîÇ…Ç∑ÇÍÇŒÅAÉNÉâÉXäOÇ≈Ç‡égópÇ≈Ç´ÇÈ
	
	
	ZankiCount = CSceneGame::mZanki - 1;
	CSceneGame::Treasure = 0;
	CSceneGame2::Coin = 0;
	//ÉVÅ[ÉìÇÃê›íË
	mScene = EGAME2;
	//ÉTÉEÉìÉhÉtÉ@ÉCÉãÅiwavÅjÇÃì«Ç›çûÇ›
	Bgm.Load("BGM.wav");
	Se.Load("jump.wav");
	
	//ÉTÉEÉìÉhÉtÉ@ÉCÉãÇÃåJÇËï‘Çµçƒê∂
	Bgm.Repeat();

	Texture.Load("Image.tga");
	Texture5.Load("imagesss.tga");
	//ï∂éöâÊëúÇÃì«Ç›çûÇ›
	CText::mFont.Load("font.tga");

	

	int map[40][50] =
	{
		{ 01,00,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00} ,
		{ 01,00,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00} ,
		{ 01,00,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00} ,
		{ 01,00,00,00,00,00,00,06,00,01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00} ,
		{ 01,00,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},
		{ 01,01,01,01,01,01,01,01,11,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01},
		{ 01,00,00,00,00,00,00,01,11,01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,06,00,00,01},
		{ 01,00,00,00,00,00,00,01,11,01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,00,00,11,03,11,00,00,06,00,00,00,01},
		{ 01,00,00,11,00,00,00,01,11,01,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,02,00,00,11,00,00,00,00,00,00,00,01},
		{ 01,00,11,07,11,00,00,01,11,01,00,00,00,00,00,11,00,00,00,11,00,00,00,00,00,00,11,00,00,00,00,00,11,11,00,00,00,00,00,00,00,00,00,00,00,00,06,00,00,01},
		{ 01,00,00,11,00,00,00,01,11,01,00,00,00,00,11,11,00,00,00,00,01,00,01,01,01,00,00,00,00,00,00,00,00,00,00,00,01,01,01,00,00,00,00,00,01,01,01,00,11,01},
		{ 01,00,00,00,00,00,00,01,11,01,00,00,00,00,00,01,01,01,01,00,00,00,00,00,00,00,00,01,01,01,01,00,00,01,01,00,00,00,00,00,00,01,00,00,00,00,00,00,11,01},
		{ 01,00,00,00,00,00,00,14,11,00,00,00,00,00,00,00,00,00,14,00,00,00,00,00,00,00,00,00,00,14,00,00,00,00,00,00,00,00,00,00,00,00,14,00,00,00,00,00,11,01},
		{ 01,00,00,00,00,00,00,00,11,00,00,01,01,01,10,00,00,00,00,10,00,10,00,00,00,10,10,00,00,00,00,10,10,00,00,10,00,00,00,10,10,00,10,10,01,00,00,00,11,01},
		{ 01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,11,01},
		{ 01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,06,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,01},
		{ 01,00,00,00,00,00,00,00,00,02,00,00,00,00,00,01,00,00,00,00,02,00,00,00,00,00,00,00,00,00,00,01,00,00,00,00,06,00,00,00,00,00,00,00,00,00,00,00,01,01},
		{ 01,00,01,00,00,11,11,00,00,00,00,00,00,00,00,11,00,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,00,00,00,00,00,00,11,11,00,00,00,00,01},
		{ 01,00,00,03,00,00,00,00,00,00,00,07,00,00,00,11,00,01,00,00,00,00,01,00,11,00,00,00,00,00,00,11,00,00,06,01,01,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{ 01,11,00,00,01,01,00,00,00,00,00,01,01,01,00,11,00,00,00,00,01,00,00,00,00,00,01,00,01,00,00,00,00,06,00,00,00,00,00,06,00,00,01,01,00,00,01,01,01,01},
		{ 01,01,11,00,00,00,00,14,01,01,00,00,00,00,00,01,00,00,01,00,00,00,00,00,01,00,00,00,00,14,01,01,00,01,00,00,00,01,01,01,01,00,00,00,00,00,00,00,00,01},
		{ 01,00,11,01,00,00,10,10,00,00,10,00,00,00,10,00,10,10,14,10,10,10,10,10,00,00,00,10,00,10,00,00,10,00,10,00,00,00,00,00,00,10,14,00,10,10,00,00,00,01},
		{ 01,00,11,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01},
		{ 01,00,01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{ 01,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{ 01,01,00,00,00,00,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,13,00,00,11,00,00,00,00,11,11,00,13,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{ 01,11,00,00,00,00,11,00,13,00,01,00,00,00,00,11,11,11,00,01,00,01,00,00,01,00,00,00,00,00,00,00,01,00,01,00,13,00,00,11,11,11,00,00,00,00,00,00,00,01},
		{ 01,11,00,00,01,00,01,00,01,00,00,11,00,00,00,00,00,00,00,00,00,00,00,01,00,00,00,13,01,00,00,01,00,00,00,01,01,00,00,00,00,03,00,00,00,00,00,00,00,01},
		{ 01,00,01,00,00,00,00,00,00,00,00,01,00,00,13,00,01,01,00,00,00,00,00,00,00,00,01,01,00,00,00,00,00,00,00,00,00,00,00,13,07,13,00,01,01,00,01,11,00,01},
		{ 01,00,00,00,00,00,00,14,00,00,00,00,00,01,01,00,00,00,14,00,00,00,00,00,00,00,00,00,00,14,00,00,00,00,00,00,00,00,00,01,01,01,14,00,00,00,00,11,01,01},
		{ 01,10,00,10,00,10,00,10,00,10,00,00,10,00,00,10,00,00,10,00,00,00,10,00,00,10,00,00,00,10,10,00,00,10,10,00,00,10,10,00,00,00,10,00,00,10,01,11,00,01},
		{ 01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,11,00,01},
		{ 01,00,00,00,00,00,00,14,00,00,00,01,00,00,00,00,00,00,14,00,00,00,00,00,00,00,00,00,00,14,00,00,00,00,00,00,00,00,00,00,00,00,01,14,00,00,00,01,00,01},
		{ 01,00,00,00,00,11,00,00,00,00,00,01,00,00,00,00,00,11,00,00,00,00,12,00,00,00,00,00,00,00,11,00,00,00,00,00,00,00,00,00,00,00,01,00,00,00,00,00,00,01},
		{ 01,00,00,00,11,03,11,00,00,00,00,00,00,00,00,00,04,00,00,00,11,11,00,00,00,00,00,00,00,00,04,00,11,00,00,00,11,11,00,00,00,00,01,00,00,00,00,00,00,01},
		{ 01,00,00,00,00,11,00,00,00,00,00,00,00,00,00,01,00,00,00,01,12,00,00,01,00,00,11,00,11,00,00,00,12,00,00,00,04,04,00,11,00,00,01,00,00,00,00,00,01,01},
		{ 01,00,00,00,00,00,00,00,00,00,00,01,00,04,04,00,00,00,12,00,00,04,00,00,00,04,00,00,12,01,00,00,00,00,01,00,00,00,00,12,01,00,05,00,00,00,00,00,00,01},
		{ 01,00,00,00,00,00,00,00,00,00,00,01,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,01,05,00,00,00,00,00,00,01},
		{ 01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01},

	};

	for (int j = 0; j < 40; j++) {
		for (int i = 0; i < 50; i++) {
			if (map[j][i] == 14) {
				CBackGround3* BackGround3 = new CBackGround3();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				ÇQÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				BackGround3->x = i * 55 - 350;
				BackGround3->y = j * -55 + 250;
			}
		}
	}
//ÉNÉâÉXÇÃÉÅÉìÉoïœêîÇ÷ÇÃë„ì¸
	CPlayer* Player = new CPlayer();
	Player->x = -220;
	Player->y = 0;
	Player->w = 20;
	Player->h = 20;
	Player->mEnabled = true;
	for (int j = 0; j < 40; j++) {
		for (int i = 0; i < 50; i++) {
			

			//mapÇÃóvëfÇ™1ÇÃéûÅAéläpå`îzíu
			if (map[j][i] == 01) {
				CMap* Map = new CMap();
				//éläpå`Ç…ílÇê›íË
				Map->mEnabled = true;
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				ÇPÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				Map->x = i * 55 - 350;
				Map->y = j * -55 + 250;
				Map->w = 30;
				Map->h = 30;
			}
			else if (map[j][i] == 2) {
				CEnemy* Enemy = new CEnemy();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				ÇQÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				Enemy->x = i * 55 - 350;
				Enemy->y = j * -55 + 250;
				//âEÇ÷à⁄ìÆ
				Enemy->mFx = -1;
				Enemy->mFy = 0;
			}

			else if (map[j][i] == 3) {
				CTreasure* Treasure = new CTreasure();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				3ÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				Treasure->x = i * 55 - 350;
				Treasure->y = j * -55 + 250;
			}
			else if (map[j][i] == 4) {
				CDisappear* Disappear = new CDisappear();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				4ÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				Disappear->x = i * 55 - 350;
				Disappear->y = j * -55 + 250;
			}
			else if (map[j][i] == 5) {
				CDoor* Door = new CDoor();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				4ÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				Door->x = i * 55 - 350;
				Door->y = j * -55 + 250;
			}

			else if (map[j][i] == 6) {
				CEnemy2* Enemy2 = new CEnemy2();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				4ÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				Enemy2->x = i * 55 - 350;
				Enemy2->y = j * -55 + 250;
			}
			else if (map[j][i] == 7) {
				CItem* Item = new CItem();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				ÇQÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				Item->x = i * 55 - 350;
				Item->y = j * -55 + 250;

			}

			else if (map[j][i] == 10) {
				CDeathBlock* DeathBlock = new CDeathBlock();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				ÇQÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				DeathBlock->x = i * 55 - 350;
				DeathBlock->y = j * -55 + 250;

			}
			else if (map[j][i] == 11) {
				CCoin* Coin = new CCoin();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				ÇQÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				Coin->x = i * 55 - 350;
				Coin->y = j * -55 + 250;

			}
			else if (map[j][i] == 12) {
				CDisappear2* Disappear2 = new CDisappear2();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				4ÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				Disappear2->x = i * 55 - 350;
				Disappear2->y = j * -55 + 250;
			}
			else if (map[j][i] == 13) {
				CEnemy3* Enemy3 = new CEnemy3();
				/*iÇÕx=-350Ç©ÇÁâ¡éZ,jÇÕy=250Ç©ÇÁå∏éZÇµÇƒÇ¢Ç¡Çƒ
				ÇQÇÃÇ†ÇÈèÍèäÇíTÇ∑
				*/
				Enemy3->x = i * 55 - 350;
				Enemy3->y = j * -55 + 250;
				//âEÇ÷à⁄ìÆ
				Enemy3->mFx = -1;
				Enemy3->mFy = 0;
			}


		}
	}
}

void CSceneGame2::Update() {

	/*
	îzóÒÇÃóvëfï™åJÇËï‘Ç∑
	îzóÒñº.size()
	îzóÒÇÃóvëfêîÇéÊìæÇ∑ÇÈ
	*/
	for (int i = 0; i < VectorRect.size(); i++) {
		/*
		îzóÒÇÃéQè∆
		îzóÒñº[ìYÇ¶éö]
		í èÌÇÃîzóÒìØólÇ…ìYÇ¶éöÇ≈óvëfÇ…ÉAÉNÉZÉXÇ≈Ç´ÇÈ
		*/
		//çXêVèàóù
		VectorRect[i]->Update();

	}
	for (int i = 0; i < VectorRect.size() - 1; i++) {
		//è’ìÀèàóù
		for (int j = i + 1; j < VectorRect.size(); j++) {
			VectorRect[i]->Collision(VectorRect[i], VectorRect[j]);
			VectorRect[j]->Collision(VectorRect[j], VectorRect[i]);
		}
	}
	//ÉäÉXÉgÇ©ÇÁçÌèúÇ∑ÇÈ
	//ÉCÉeÉåÅ[É^ÇÃê∂ê¨
	std::vector<CRectangle*>::iterator itr;//vectorÇÃîzóÒÇ…ÉAÉNÉZÉX
	//ÉCÉeÉåÅ[É^ÇêÊì™
	itr = VectorRect.begin();//îzóÒÇÃêÊì™
	//ç≈å„Ç‹Ç≈åJÇËï‘Çµ
	while (itr != VectorRect.end()) {//îzóÒÇÃç≈å„
		if ((*itr)->mEnabled) {
			//îzóÒÇÃéüÇÃóvëfÇ÷
			itr++;
		}
		else {
			//falseÇÃÉCÉìÉXÉ^ÉìÉXÇçÌèú
			delete* itr;//îzóÒóvëfÇÃéQè∆Å@Å@*ïœêîñº
			//ÉäÉXÉgÇ©ÇÁÇ‡çÌèú
			itr = VectorRect.erase(itr);//îzóÒóvëfÇÃçÌèú
		}
	}



	//ï`âÊîÕàÕïœêîÇÃçÏê¨Å@îÕàÕâ∫ÅF-300Å@îÕàÕè„ÅF300 å≈íË
	double mLeft, mRight, mBottom, mTop;
	mBottom = CPlayer::spInstance->y - 270.0;
		mTop = mBottom + 600.0f;
	//âÊñ îÕàÕç∂ÇÃê›íË
	mLeft = CPlayer::spInstance->x - 400;
	//âÊñ îÕàÕâEÇÃê›íË
	mRight = mLeft + 800.0f;
	//âÊñ ìäâeîÕàÕÇÃïœçX
	//çsóÒÇÉvÉçÉWÉFÉNÉVÉáÉìÉÇÅ[ÉhÇ…ïœçX
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();//çsóÒÇèâä˙âª
	//ÇQDÇÃâÊñ Çê›íË
	gluOrtho2D(mLeft, mRight, mBottom, mTop);
	for (int i = 0; i < VectorRect.size(); i++) {
		//ï`âÊèàóù
		VectorRect[i]->Render();
	}



	glLoadIdentity();//çsóÒÇèâä˙âª
	//ÇQDÇÃìäâeîÕàÕÇê›íË
	gluOrtho2D(-400, 400, -300, 300);
	//âÊñ Ç…å≈íËÇ∑ÇÈï∂éöóÒÇÃï`âÊ
	//CText::DrawString("(-380,280)", -380, 280, 16, 16);
	//ï∂éöóÒÇÃï`âÊ
	CText::DrawString("SCORE", -350, 250, 16, 16);
	CText::DrawString("COIN", -350, 220, 16, 16);
	
	CText::DrawString("TAKARA", 100, 250, 16, 16);
	CText::DrawString("ZANKI", 100, 220, 16, 16);

	char buf[10];//ÉXÉRÉAÇÃï`âÊ
	sprintf(buf, "%d ", CSceneGame::SCore);
	CText::DrawString(buf, -170, 250, 16, 16);

    //ÉRÉCÉìÇÃñáêîÇÃï`âÊ
	sprintf(buf, "%d", CSceneGame2::Coin);
	CText::DrawString(buf, -170, 220, 16, 16);

     //ïÛÇÃå¬êîÇÃï`âÊ
	sprintf(buf, "%d/4", CSceneGame::Treasure);
	CText::DrawString(buf, 300, 250, 16, 16);

	//écã@
	sprintf(buf, "%d", CSceneGame::mZanki);
	CText::DrawString(buf, 300, 220, 16, 16);



	if (CSceneGame::Life <= 0) {
	
		if (ZankiCount >= 0) {
			sprintf(buf, "ZANKI %d->", CSceneGame::mZanki);
			CText::DrawString(buf, -150, -100, 16, 16);
			sprintf(buf, " %d", ZankiCount);
			CText::DrawString(buf, 100, -100, 16, 16);
		}
		CText::DrawString("GAMEOVER", -270, 0, 40, 40);
		CText::DrawString("Push ENTER Key", -200, -200, 16, 16);
		if (CKey::Once(VK_RETURN)) {
			CSceneGame::mZanki -= 1;
			CSceneGame::Life = 1;
			mScene = EGAMER2;
            if (CSceneGame::mZanki<= -1 ) {
			mScene = ETITLE;
			CSceneGame::mZanki += 4;
		    }
		}
		


	}
	if (CSceneGame::Life > 0 && CSceneGame::Treasure ==4) {
		CText::DrawString("STAGE2 CLEAR", -350, 0, 30, 30);
		CText::DrawString("Push ENTER Key", -200, -100, 16, 16);
		if (CKey::Once(VK_RETURN)) {
			mScene = EGAME3;
		}



	}
	if (CSceneGame2::Coin == 30) {
		CSceneGame::mZanki += 1;
		CSceneGame2::Coin -= 30;

	}

}


//éüÇÃÉVÅ[ÉìÇÃéÊìæ
CScene::EScene CSceneGame2::GetNextScene() {
	return mScene;
}
//ÉfÉXÉgÉâÉNÉ^
CSceneGame2::~CSceneGame2() {
	//ëSÇƒÇÃÉCÉìÉXÉ^ÉìÉXÇçÌèúÇµÇ‹Ç∑
	for (int i = 0; i < VectorRect.size(); i++) {
		//ÉCÉìÉXÉ^ÉìÉXÇÃçÌèú
		delete VectorRect[i];
	}
	//â¬ïœí∑îzóÒÇÃÉNÉäÉA
	VectorRect.clear();
}
